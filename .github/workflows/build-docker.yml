name: Build docker image

on:
  push:
    branches:
      - 6.x
      - master
  release:
    types:
      - published

permissions:
  contents: read

jobs:
  pre_job:
    permissions:
      actions: write
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5.3.1
        with:
          concurrent_skipping: always
          cancel_others: true
          do_not_skip: '["release"]'
          # list files that may affect or are included into the built phar
          paths: '["bin/**", "assets/**", "build/**", "dictionaries/**", "src/**", "stubs/**", "psalm", "psalm-language-server", "psalm-plugin", "psalm-refactor", "psalm-review", "psalter", "box.json.dist", "composer.json", "config.xsd", "keys.asc.gpg", "scoper.inc.php"]'

  build-docker:
    permissions:
      packages: write
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer:v2
          coverage: none
        env:
          fail-fast: true

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required for composer to automatically detect root package version

      - name: Get Composer Cache Directories
        id: composer-cache
        run: |
          echo "files_cache=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
          echo "vcs_cache=$(composer config cache-vcs-dir)" >> $GITHUB_OUTPUT

      - name: Generate composer.lock
        run: |
          composer update --no-install

      - name: Cache composer cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.composer-cache.outputs.files_cache }}
            ${{ steps.composer-cache.outputs.vcs_cache }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Run composer install
        run: composer install -o
          # DO NOT set this, we need composer to figure out the version itself
          # env:
          #   COMPOSER_ROOT_VERSION: dev-master

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Upload docker image
        env:
          EVENT_NAME: ${{ github.event_name }}
          REF: ${{ github.ref }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          php bin/ci/build-docker.php
